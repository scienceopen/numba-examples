#!/usr/bin/env ipython

from __future__ import division,print_function
import pyximport; pyximport.install()
from numba import jit # inline auto compilation to C of Python code
import numba,numpy,math
import platform
#
import cpisum

N=1000000

@jit(nopython=True)
def pisum():
    """
    Machin formula for Pi http://mathworld.wolfram.com/PiFormulas.html
    """
    s = 0.
    for k in range(1, N+1):
        s += (-1)**(k+1)/(2*k-1)
    return 4.*s

assert numpy.isclose(numpy.pi,pisum(),rtol=1e-4)

print('--> Numba {}'.format(numba.__version__))
%timeit pisum()

#%%%%%%%%%%%%%%%%%%%%%%%%%%  PURE PYTHON
def pisum_c():
    """
    Machin formula for Pi http://mathworld.wolfram.com/PiFormulas.html
    """
    s = 0.
    for k in range(1, N+1):
        s += (-1)**(k+1)/(2*k-1)
    return 4.*s


print('--> Python {}'.format(platform.python_version()))
%timeit pisum()
#%%%%%%%%%%%%%%%%%%%%%%%% CYTHON
import cython
N = 1000000

assert math.isclose(math.pi,cpisum.pisum(N),rel_tol=1e-4),'Cython convergence error'

print('--> Cython ',cython.__version__)


%timeit cpisum.pisum(N)
